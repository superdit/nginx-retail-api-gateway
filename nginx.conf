#location: /etc/nginx/nginx.conf
user nginx;
worker_processes auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    # access_log  /var/log/nginx/access.log  main;
    access_log off;
    server_tokens off;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;
    server {

        listen 80  proxy_protocol;

        client_max_body_size 60M;

        proxy_set_header HOST $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP $proxy_protocol_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # untuk penggunaan "proxy_protocol", ip client di ambil dari $proxy_protocol_addr
        # untuk penggunaan tanpa "proxy_protocol", ip client di ambil dari $remote_addr
        # proxy_set_header X-Real-IP $remote_addr;
        # proxy_set_header X-Real-IP $proxy_protocol_addr;
        # proxy_set_header X-Forwarded-For $proxy_protocol_addr;

        # RETAIL FRONTEND
        include /etc/nginx/frontend.conf.d/*.conf;

        # RETAIL BACKEND
        include /etc/nginx/backend.conf.d/*.conf;

        # RETAIL AUTH GATEWAY
        location = /retail-auth {
            proxy_buffer_size 256k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;

            include /etc/nginx/include.conf.d/cors.header.conf;
            proxy_pass http://backend-auth.default.svc.cluster.local/api/auth/session/check;

            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header X-Original-URI $request_uri;
        }

        error_page 401 =401 /error/401;
        error_page 403 =403 /error/403;
        error_page 405 =405 /error/405;

        location = /error/401 {
            include /etc/nginx/include.conf.d/cors.header.conf;
            default_type application/json;
            return 401 '{"error":{"message":"Authorization Required","code":401}}';
        }

        location = /error/403 {
            include /etc/nginx/include.conf.d/cors.header.conf;
            default_type application/json;
            return 403 '{"error":{"message":"Forbidden","code":403}}';
        }

        location = /error/405 {
            include /etc/nginx/include.conf.d/cors.header.conf;
            default_type application/json;
            return 403 '{"error":{"message":"Method Forbidden","code":405}}';
        }
    }
}
